{\rtf1\ansi\ansicpg1252\cocoartf949
{\fonttbl\f0\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red191\green0\blue0;\red0\green0\blue0;\red0\green0\blue191;
\red96\green96\blue96;\red0\green115\blue0;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f0\fs36 \cf2 // ==========================================================\cf3 \
\cf2 // SuperCollider Workspace for Color and Timbre\cf3 \
\cf2 // (c) akihiro kubota, 2007\cf3 \
\cf2 // ==========================================================\cf3 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 ///////////////////////////////////////////////////////////\cf3 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf2 //\cf3 \
\cf2 // setup\cf3 \
\cf2 //\cf3 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 // current window\cf3 \
(\
d = \cf4 Document\cf3 .current;\
d.font_(\cf4 Font\cf3 (\cf5 "Monaco"\cf3 , 18), -1);\
d.background_(\cf4 Color\cf3 .new255(250, 250, 250, 230));\
d.stringColor_(\cf4 Color\cf3 .new255(0, 0, 0, 255));\
d.bounds_(\cf4 Rect\cf3 (540, 0, 900, 900));\
d.syntaxColorize;\
\
\cf2 // listener window\cf3 \
\cf4 Document\cf3 .listener.title_(\cf5 "post"\cf3 );\
\cf4 Document\cf3 .listener.bounds_(\cf4 Rect\cf3 (0, 398, 640, 480));\
\cf4 Document\cf3 .listener.background_(\cf4 Color\cf3 .new255(0, 0, 0, 230));\
\cf4 Document\cf3 .listener.stringColor_(\cf4 Color\cf3 .new255(245, 245, 245, 145));\
\
\cf2 // code dump\cf3 \
codeDump = \{ \cf4 arg\cf3  x; x.postln; \};\
\
\cf2 // history\cf3 \
\cf4 History\cf3 .clear; \
\cf4 History\cf3 .start;\
\
\cf2 // boot internal server\cf3 \
\cf4 Server\cf3 .default = s = \cf4 Server\cf3 .internal;\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf3 s.recSampleFormat = \cf5 "int16"\cf3 ;\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf3 s = \cf4 Server\cf3 .default;\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural
\cf3 if(not(s.serverRunning), \{s.boot\});\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf3 \
\cf2 // create a proxyspace\cf3 \
p = \cf4 ProxySpace\cf3 .push(s);\
p.fadeTime = 3.0;\
p.clock = \cf4 TempoClock\cf3 .default;\
)\
\
(\
\cf2 // spectrum\cf3 \
\cf4 FreqScope\cf3 .new(512, 256, 0, \cf4 Color\cf3 .yellow, \cf4 Color\cf3 .black);\
\
\cf2 // waveform\cf3 \
\cf4 Stethoscope\cf3 .new(s, 2, zoom:0.2);\
)\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf2 // history\cf3 \
\cf4 History\cf3 .stop;		\cf2 // stop collecting\cf3 \
\cf4 History\cf3 .document;	\cf2 // create a document with all the changes\cf3 \
\cf4 History\cf3 .makeWin;	\cf2 // gui window\cf3 \
\cf4 History\cf3 .play;		\cf2 // posts lines by default\cf3 \
\cf4 History\cf3 .saveStory(\cf5 "~/Documents/LiveCoding/SC3/History_"\cf3  ++ \cf4 Date\cf3 .getDate.stamp ++ \cf5 ".sc"\cf3 );\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf3 \
\cf2 // the end\cf3 \
p.end(30);\
p.clear.pop;\
p.free;\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf3 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 ////////////////////////////////////////////////////////////\cf3 \
\
\cf2 // output proxy\cf3 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf3 (\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf3 ~src.ar(2);\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf3 ~out.ar(2);\
~out.play;\
~out.vol = 0.5;\
)\
~out.stop;\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf3 \
\cf2 ///////////////////////////////////////////////////////\cf3 \
\
\cf2 // simple coupling\cf3 \
~out = \{ \cf4 arg\cf3  freq=20; \cf4 SinOsc\cf3 .ar(freq, 0, 0.1) ! 2\};\
(\
\cf4 var\cf3  w, freq;\
w = \cf4 SCWindow\cf3 (\cf5 "RGB"\cf3 , \cf4 Rect\cf3 (100, 100, 500, 500));\
w.view.background = \cf4 Color\cf3 .white;\
w.onClose = \{ \cf4 Tdef\cf3 (\cf6 \\x\cf3 ).stop; \};\
w.front;\
\cf4 Tdef\cf3 (\cf6 \\x\cf3 , \{\
	\cf4 var\cf3  idata, rdata, gdata, bdata, gamma, freq, wl, i, r, g, b, f0, l0;\
	gamma = 2.2;\
	idata = [390, 395, 400, 405, 410, 415, 420, 425, 430, 435, 440, 445, 450, 455, 460, 465, 470, 475, 480, 485, 490, 495, 500, 505, 510, 515, 520, 525, 530, 535, 540, 545, 550, 555, 560, 565, 570, 575, 580, 585, 590, 595, 600, 605, 610, 615, 620, 625, 630, 635, 640, 645, 650, 655, 660, 665, 670, 675, 680, 685, 690, 695, 700, 705, 710, 715, 720, 725, 730, 735, 740, 745, 750, 755, 760, 765, 770, 775, 780, 785, 790, 795, 800, 805, 810, 815, 820, 825, 830];\
	rdata = [1.5000\cf4 E\cf3 -03, 3.8000\cf4 E\cf3 -03, 8.9000\cf4 E\cf3 -03, 1.8800\cf4 E\cf3 -02, 3.5000\cf4 E\cf3 -02, 5.3100\cf4 E\cf3 -02, 7.0200\cf4 E\cf3 -02, 7.6300\cf4 E\cf3 -02, 7.4500\cf4 E\cf3 -02, 5.6100\cf4 E\cf3 -02, 3.2300\cf4 E\cf3 -02, 4.4000\cf4 E\cf3 -03, 4.7800\cf4 E\cf3 -02, 9.7000\cf4 E\cf3 -02, 1.5860\cf4 E\cf3 -01, 2.2350\cf4 E\cf3 -01, 2.8480\cf4 E\cf3 -01, 3.3460\cf4 E\cf3 -01, 3.7760\cf4 E\cf3 -01, 4.1360\cf4 E\cf3 -01, 4.3170\cf4 E\cf3 -01, 4.4520\cf4 E\cf3 -01, 4.3500\cf4 E\cf3 -01, 4.1400\cf4 E\cf3 -01, 3.6730\cf4 E\cf3 -01, 2.8450\cf4 E\cf3 -01, 1.8550\cf4 E\cf3 -01, 4.3500\cf4 E\cf3 -02, 1.2700\cf4 E\cf3 -01, 3.1290\cf4 E\cf3 -01, 5.3620\cf4 E\cf3 -01, 7.7220\cf4 E\cf3 -01, 1.0059\cf4 E\cf3 +00, 1.2710\cf4 E\cf3 +00, 1.5574\cf4 E\cf3 +00, 1.8465\cf4 E\cf3 +00, 2.1511\cf4 E\cf3 +00, 2.4250\cf4 E\cf3 +00, 2.6574\cf4 E\cf3 +00, 2.9151\cf4 E\cf3 +00, 3.0779\cf4 E\cf3 +00, 3.1613\cf4 E\cf3 +00, 3.1673\cf4 E\cf3 +00, 3.1048\cf4 E\cf3 +00, 2.9462\cf4 E\cf3 +00, 2.7194\cf4 E\cf3 +00, 2.4526\cf4 E\cf3 +00, 2.1700\cf4 E\cf3 +00, 1.8358\cf4 E\cf3 +00, 1.5179\cf4 E\cf3 +00, 1.2428\cf4 E\cf3 +00, 1.0070\cf4 E\cf3 +00, 7.8270\cf4 E\cf3 -01, 5.9340\cf4 E\cf3 -01, 4.4420\cf4 E\cf3 -01, 3.2830\cf4 E\cf3 -01, 2.3940\cf4 E\cf3 -01, 1.7220\cf4 E\cf3 -01, 1.2210\cf4 E\cf3 -01, 8.5300\cf4 E\cf3 -02, 5.8600\cf4 E\cf3 -02, 4.0800\cf4 E\cf3 -02, 2.8400\cf4 E\cf3 -02, 1.9700\cf4 E\cf3 -02, 1.3500\cf4 E\cf3 -02, 9.2400\cf4 E\cf3 -03, 6.3800\cf4 E\cf3 -03, 4.4100\cf4 E\cf3 -03, 3.0700\cf4 E\cf3 -03, 2.1400\cf4 E\cf3 -03, 1.4900\cf4 E\cf3 -03, 1.0500\cf4 E\cf3 -03, 7.3900\cf4 E\cf3 -04, 5.2300\cf4 E\cf3 -04, 3.7200\cf4 E\cf3 -04, 2.6500\cf4 E\cf3 -04, 1.9000\cf4 E\cf3 -04, 1.3600\cf4 E\cf3 -04, 9.8400\cf4 E\cf3 -05, 7.1300\cf4 E\cf3 -05, 5.1800\cf4 E\cf3 -05, 3.7700\cf4 E\cf3 -05, 2.7600\cf4 E\cf3 -05, 2.0300\cf4 E\cf3 -05, 1.4900\cf4 E\cf3 -05, 1.1000\cf4 E\cf3 -05, 8.1800\cf4 E\cf3 -06, 6.0900\cf4 E\cf3 -06, 4.5500\cf4 E\cf3 -06];\
	gdata = [-4.0000\cf4 E\cf3 -04, -1.0000\cf4 E\cf3 -03, -2.5000\cf4 E\cf3 -03, -5.9000\cf4 E\cf3 -03, -1.1900\cf4 E\cf3 -02, -2.0100\cf4 E\cf3 -02, -2.8900\cf4 E\cf3 -02, -3.3800\cf4 E\cf3 -02, -3.4900\cf4 E\cf3 -02, -2.7600\cf4 E\cf3 -02, -1.6900\cf4 E\cf3 -02,  2.4000\cf4 E\cf3 -03,  2.8300\cf4 E\cf3 -02, 6.3600\cf4 E\cf3 -02, 1.0820\cf4 E\cf3 -01, 1.6170\cf4 E\cf3 -01, 2.2010\cf4 E\cf3 -01,  2.7960\cf4 E\cf3 -01,  3.4280\cf4 E\cf3 -01,  4.0860\cf4 E\cf3 -01, 4.7160\cf4 E\cf3 -01,  5.4910\cf4 E\cf3 -01,  6.2600\cf4 E\cf3 -01,  7.0970\cf4 E\cf3 -01,  7.9350\cf4 E\cf3 -01,  8.7150\cf4 E\cf3 -01,  9.4770\cf4 E\cf3 -01, 9.9450\cf4 E\cf3 -01, 1.0203\cf4 E\cf3 +00, 1.0375\cf4 E\cf3 +00, 1.0517\cf4 E\cf3 +00, 1.0390\cf4 E\cf3 +00, 1.0029\cf4 E\cf3 +00, 9.6980\cf4 E\cf3 -01, 9.1620\cf4 E\cf3 -01, 8.5710\cf4 E\cf3 -01, 7.8230\cf4 E\cf3 -01, 6.9530\cf4 E\cf3 -01, 5.9660\cf4 E\cf3 -01, 5.0630\cf4 E\cf3 -01, 4.2030\cf4 E\cf3 -01, 3.3600\cf4 E\cf3 -01, 2.5910\cf4 E\cf3 -01, 1.9170\cf4 E\cf3 -01, 1.3670\cf4 E\cf3 -01, 9.3800\cf4 E\cf3 -02, 6.1100\cf4 E\cf3 -02, 3.7100\cf4 E\cf3 -02, 2.1500\cf4 E\cf3 -02, 1.1200\cf4 E\cf3 -02, 4.4000\cf4 E\cf3 -03, 7.8000\cf4 E\cf3 -05, -1.3680\cf4 E\cf3 -03, -1.9880\cf4 E\cf3 -03, -2.1680\cf4 E\cf3 -03, -2.0060\cf4 E\cf3 -03, -1.6420\cf4 E\cf3 -03, -1.2720\cf4 E\cf3 -03, -9.4700\cf4 E\cf3 -04, -6.8300\cf4 E\cf3 -04, -4.7800\cf4 E\cf3 -04, -3.3700\cf4 E\cf3 -04, -2.3500\cf4 E\cf3 -04, -1.6300\cf4 E\cf3 -04, -1.1100\cf4 E\cf3 -04, -7.4800\cf4 E\cf3 -05, -5.0800\cf4 E\cf3 -05, -3.4400\cf4 E\cf3 -05, -2.3400\cf4 E\cf3 -05, -1.5900\cf4 E\cf3 -05, -1.0700\cf4 E\cf3 -05, -7.2300\cf4 E\cf3 -06, -4.8700\cf4 E\cf3 -06, -3.2900\cf4 E\cf3 -06, -2.2200\cf4 E\cf3 -06, -1.5000\cf4 E\cf3 -06, -1.0200\cf4 E\cf3 -06, -6.8800\cf4 E\cf3 -07, -4.6500\cf4 E\cf3 -07, -3.1200\cf4 E\cf3 -07, -2.0800\cf4 E\cf3 -07, -1.3700\cf4 E\cf3 -07, -8.8000\cf4 E\cf3 -08, -5.5300\cf4 E\cf3 -08, -3.3600\cf4 E\cf3 -08, -1.9600\cf4 E\cf3 -08, -1.0900\cf4 E\cf3 -08, -5.7000\cf4 E\cf3 -09, -2.7700\cf4 E\cf3 -09];\
	bdata = [6.2000\cf4 E\cf3 -03, 1.6100\cf4 E\cf3 -02, 4.0000\cf4 E\cf3 -02, 9.0600\cf4 E\cf3 -02, 1.8020\cf4 E\cf3 -01, 3.0880\cf4 E\cf3 -01, 4.6700\cf4 E\cf3 -01, 6.1520\cf4 E\cf3 -01, 7.6380\cf4 E\cf3 -01, 8.7780\cf4 E\cf3 -01, 9.7550\cf4 E\cf3 -01, 1.0019\cf4 E\cf3 +00, 9.9960\cf4 E\cf3 -01, 9.1390\cf4 E\cf3 -01, 8.2970\cf4 E\cf3 -01, 7.4170\cf4 E\cf3 -01, 6.1340\cf4 E\cf3 -01, 4.7200\cf4 E\cf3 -01, 3.4950\cf4 E\cf3 -01, 2.5640\cf4 E\cf3 -01, 1.8190\cf4 E\cf3 -01, 1.3070\cf4 E\cf3 -01, 9.1000\cf4 E\cf3 -02, 5.8000\cf4 E\cf3 -02, 3.5700\cf4 E\cf3 -02, 2.0000\cf4 E\cf3 -02, 9.5000\cf4 E\cf3 -03, 7.0000\cf4 E\cf3 -04, 4.3000\cf4 E\cf3 -03, 6.4000\cf4 E\cf3 -03, 8.2000\cf4 E\cf3 -03, 9.4000\cf4 E\cf3 -03, 9.7000\cf4 E\cf3 -03, 9.7000\cf4 E\cf3 -03, 9.3000\cf4 E\cf3 -03, 8.7000\cf4 E\cf3 -03, 8.0000\cf4 E\cf3 -03, 7.3000\cf4 E\cf3 -03, 6.3000\cf4 E\cf3 -03, 5.3700\cf4 E\cf3 -03, 4.4500\cf4 E\cf3 -03, 3.5700\cf4 E\cf3 -03, 2.7700\cf4 E\cf3 -03, 2.0800\cf4 E\cf3 -03, 1.5000\cf4 E\cf3 -03, 1.0300\cf4 E\cf3 -03, 6.8000\cf4 E\cf3 -04, 4.4200\cf4 E\cf3 -04, 2.7200\cf4 E\cf3 -04, 1.4100\cf4 E\cf3 -04, 5.4900\cf4 E\cf3 -05, 2.2000\cf4 E\cf3 -06, 2.3700\cf4 E\cf3 -05, 2.8600\cf4 E\cf3 -05, 2.6100\cf4 E\cf3 -05, 2.2500\cf4 E\cf3 -05, 1.8200\cf4 E\cf3 -05, 1.3900\cf4 E\cf3 -05, 1.0300\cf4 E\cf3 -05, 7.3800\cf4 E\cf3 -06, 5.2200\cf4 E\cf3 -06, 3.6700\cf4 E\cf3 -06, 2.5600\cf4 E\cf3 -06, 1.7600\cf4 E\cf3 -06, 1.2000\cf4 E\cf3 -06, 8.1700\cf4 E\cf3 -07, 5.5500\cf4 E\cf3 -07, 3.7500\cf4 E\cf3 -07, 2.5400\cf4 E\cf3 -07, 1.7100\cf4 E\cf3 -07, 1.1600\cf4 E\cf3 -07, 7.8500\cf4 E\cf3 -08, 5.3100\cf4 E\cf3 -08, 3.6000\cf4 E\cf3 -08, 2.4400\cf4 E\cf3 -08, 1.6500\cf4 E\cf3 -08, 1.1200\cf4 E\cf3 -08, 7.5300\cf4 E\cf3 -09, 5.0700\cf4 E\cf3 -09, 3.4000\cf4 E\cf3 -09, 2.2700\cf4 E\cf3 -09, 1.5000\cf4 E\cf3 -09, 9.8600\cf4 E\cf3 -10, 6.3900\cf4 E\cf3 -10, 4.0700\cf4 E\cf3 -10, 2.5300\cf4 E\cf3 -10, 1.5200\cf4 E\cf3 -10, 8.6400\cf4 E\cf3 -11, 4.4200\cf4 E\cf3 -11];\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf3 	freq = 20;\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf3 	w.drawHook = \{\
		\cf4 Pen\cf3 .use \{\
		\cf4 Color\cf3 .fromArray([r, g, b]).set;\
		\cf4 Pen\cf3 .fillRect(\cf4 Rect\cf3 (0, 0, 500, 500));\
		freq.asString.drawAtPoint(10@5, \cf4 Font\cf3 (\cf5 "Monaco"\cf3 , 60), \cf4 Color\cf3 .white);\
		\};\
	\};\
	loop(\{\
		freq = freq + 10;\
		if( freq > 20000, \{freq = 20\} );\
		~out.set(\cf6 \\freq\cf3 , freq);\
		wl = -156.66 * freq.max(0).log10 + 1033.648;\
		i = idata.indexInBetween(wl);\
		r = rdata.blendAt(i).max(0)**(1/gamma);\
		g = gdata.blendAt(i).max(0)**(1/gamma);\
		b = bdata.blendAt(i).max(0)**(1/gamma);\
		w.refresh;\
		0.01.wait;\
		\});\
\});\
)\
\
\cf4 Tdef\cf3 (\cf6 \\x\cf3 ).play(\cf4 AppClock\cf3 );\
\cf4 Tdef\cf3 (\cf6 \\x\cf3 ).stop;\
\
\cf2 /////\cf3 \
\
\cf2 // White Noise (equal energy per cycle)\cf3 \
~out = \{ \cf4 WhiteNoise\cf3 .ar(0.5) ! 2 \}.plot(1);\
~out = \cf4 nil\cf3 ;\
\cf2 // Pink Noise (equal power in bands)\cf3 \
~out = \{ \cf4 PinkNoise\cf3 .ar(0.5) ! 2 \}.plot(1);\
\
\cf2 // Brown Noise\cf3 \
~out = \{ \cf4 BrownNoise\cf3 .ar(0.5) ! 2 \}.plot(1);\
\
\cf2 // Blue Noise\cf3 \
\
\cf2 // Red Noise\cf3 \
\
\cf2 // Purple Noise\cf3 \
\
\cf2 // Gray Noise\cf3 \
\
\
\cf2 //\cf3 \
\cf2 // Filtered Noise\cf3 \
\cf2 //\cf3 \
~src.ar(2);\
~freq.kr(1);\
~rq.kr(1);\
\
~src = \{ \cf4 WhiteNoise\cf3 .ar ! 2 \};\
~freq = \{ \cf4 MouseX\cf3 .kr(20.0, 22050.0, 1) \};\
~rq = \{ \cf4 MouseY\cf3 .kr(0.001, 1, 1) \};\
\
\cf2 // White Noise + Lowpass Filter\cf3 \
~out = \{ \cf4 LPF\cf3 .ar(~src.ar, 1000.0, 0.2) \};\
~out = \{ \cf4 LPF\cf3 .ar(~src.ar, ~freq.kr, 0.2) \};\
\
~out = \{ \cf4 RLPF\cf3 .ar(~src.ar, ~freq.kr, 0.1, 0.2) \};\
~out = \{ \cf4 RLPF\cf3 .ar(~src.ar, ~freq.kr, ~rq.kr, 0.1) \};\
\
\
\cf2 // White Noise + Highpass Filter\cf3 \
~out = \{ \cf4 HPF\cf3 .ar(~src.ar, 1000.0, 0.2) \};\
~out = \{ \cf4 HPF\cf3 .ar(~src.ar, ~freq.kr, 0.2) \};\
\
~out = \{ \cf4 RHPF\cf3 .ar(~src.ar, ~freq.kr, 0.1, 0.2) \};\
~out = \{ \cf4 RHPF\cf3 .ar(~src.ar, ~freq.kr, ~rq.kr, 0.1) \};\
\
\
\cf2 // White Noise + Bandpass Filter\cf3 \
~out = \{ \cf4 BPF\cf3 .ar(~src.ar, ~freq.kr, 0.001, 10.0) \};\
~out = \{ \cf4 BPF\cf3 .ar(~src.ar, ~freq.kr, ~rq.kr, 0.1/~rq.kr) \};\
~out = \{ \cf4 Resonz\cf3 .ar(~src.ar, ~freq.kr, ~rq.kr, 0.1/~rq.kr) \};\
~out = \{ \cf4 SinOsc\cf3 .ar(~freq.kr, 0, 0.1) ! 2\};\
\
\cf2 // White Noise + Band Reject Filter\cf3 \
~out = \{ \cf4 BRF\cf3 .ar(~src.ar, ~freq.kr, ~rq.kr, 0.2) \};\
\
\cf2 //\cf3 \
\cf2 // Noise Sculpture\cf3 \
\cf2 //\cf3 \
\
~freqX.kr(1);\
~freqY.kr(1);\
\
~freqX = \{ \cf4 MouseX\cf3 .kr(20.0, 22050.0, 1) \};\
~freqY = \{ \cf4 MouseY\cf3 .kr(20.0, 22050.0, 1) \};\
\
(\
~out = \{ \cf4 BPF\cf3 .ar(\
				\cf4 BPF\cf3 .ar(~src.ar, ~freqX.kr, 0.001, 50.0),\
				~freqY.kr, 0.001, 50.0) \
			\};\
)\
\
\
(\
~out = \{ \cf4 BPF\cf3 .ar(\
				\cf4 BPF\cf3 .ar(\
					\cf4 BPF\cf3 .ar(\
						\cf4 BPF\cf3 .ar(~src.ar, 1000.0, 0.001, 400.0),\
						1500, 0.001, 400.0),\
					3000.0, 0.001, 400.0),\
				4500, 0.001, 400.0) \
			\};\
)\
\
(\
~out = \{ \
	\cf4 var\cf3  w = \cf4 WhiteNoise\cf3 .ar ! 2;\
	4.do(\{ \cf4 |i|\cf3  w = \cf4 BPF\cf3 .ar(w, ((i+1)*1000.0).postln, 0.001, 400.0) \});\
	\cf4 Normalizer\cf3 .ar(w, 0.5, 0.01) \};\
)\
\
(\
~out = \{ \
	\cf4 var\cf3  w = \cf4 WhiteNoise\cf3 .ar ! 2;\
	10.do(\{ w = \cf4 BPF\cf3 .ar(w, 22050.0.linrand.postln, 0.001, 1000.0) \});\
	\cf4 Normalizer\cf3 .ar(w, 0.5, 0.01); \};\
)\
\
(\
~out = \{ \
	\cf4 var\cf3  w = \cf4 WhiteNoise\cf3 .ar ! 2;\
	10.do(\{ w = \cf4 BPF\cf3 .ar(w, exprand(20.0, 22050.0).postln, 0.001, 1000.0) \});\
	\cf4 Normalizer\cf3 .ar(w, 0.5, 0.01); \};\
)\
\
(\
~out = \{ \
	\cf4 var\cf3  w = \cf4 WhiteNoise\cf3 .ar ! 2;\
	20.do(\{ w = \cf4 Resonz\cf3 .ar(w, exprand(20.0, 22050.0).postln, 0.001, 4000.0) \});\
	\cf4 Normalizer\cf3 .ar(w, 0.5, 0.01); \};\
)\
\
(\
~out = \{ \cf4 Klank\cf3 .ar(`[\
				[882, 567, 1323, 2646],\
				(0.01 ! 4),\
				(1.0 ! 4)],\
				~src.ar)\};\
)\
\
(\
~out = \{ \cf4 Klank\cf3 .ar(`[\
				\cf4 Array\cf3 .exprand(12, 20.0, 22050.0),\
				\cf4 Array\cf3 .exprand(12, 0.001, 0.01),\
				\cf4 Array\cf3 .rand(12, 0.1, 2.0)],\
				~src.ar)\};\
)\
\
~src = \{ \cf4 Impulse\cf3 .ar(\cf4 MouseX\cf3 .kr(1.0, 22050.0, 1), 0, 10.0) ! 2 \};\
~out.rebuild;\
~out = \cf4 nil\cf3 ;\
\
\cf2 //\cf3 \
\cf2 // Sound Color Composition\cf3 \
\cf2 //\cf3 \
\cf2 // bass = red, mid = green, high = blue\cf3 \
\cf2 //\cf3 \
\
\cf2 // RGB square\cf3 \
(\
\cf4 var\cf3  w;\
w = \cf4 SCWindow\cf3 (\cf5 "RGB"\cf3 , \cf4 Rect\cf3 (100, 100, 600, 600));\
w.view.background = \cf4 Color\cf3 .white;\
w.front;\
w.drawHook = \{\
	\cf4 Pen\cf3 .use \{\
		\cf4 Color\cf3 .red.set;\
		\cf4 Pen\cf3 .fillRect(\cf4 Rect\cf3 (0, 0, 600, 200));\
		\cf4 Color\cf3 .green.set;\
		\cf4 Pen\cf3 .fillRect(\cf4 Rect\cf3 (0, 200, 600, 400));\
		\cf4 Color\cf3 .blue.set;\
		\cf4 Pen\cf3 .fillRect(\cf4 Rect\cf3 (0, 400, 600, 600));\
	\};\
\};\
w.refresh;\
)\
\
\cf2 // RGB flip\cf3 \
(\
\cf4 var\cf3  w, rgb, run = \cf4 true\cf3 ;\
w = \cf4 SCWindow\cf3 (\cf5 "RGB"\cf3 , \cf4 Rect\cf3 (100, 100, 600, 600));\
w.view.background = \cf4 Color\cf3 .white;\
w.onClose = \{ run = \cf4 false\cf3 ; \};\
w.front;\
w.drawHook = \{\
	\cf4 Pen\cf3 .use \{\
		rgb = [0, 1, 2].scramble;\
		\cf4 Color\cf3 .fromArray([1, 0, 0].rotate(rgb.at(0))).set;\
		\cf4 Pen\cf3 .fillRect(\cf4 Rect\cf3 (0, 0, 600, 200));\
		\cf4 Color\cf3 .fromArray([1, 0, 0].rotate(rgb.at(1))).set;\
		\cf4 Pen\cf3 .fillRect(\cf4 Rect\cf3 (0, 200, 600, 400));\
		\cf4 Color\cf3 .fromArray([1, 0, 0].rotate(rgb.at(2))).set;\
		\cf4 Pen\cf3 .fillRect(\cf4 Rect\cf3 (0, 400, 600, 600));\
	\};\
\};\
\{ while \{ run \} \{ w.refresh; 0.1.wait \} \}.fork(\cf4 AppClock\cf3 )\
)\
\
\
\cf2 // three primary color proxies\cf3 \
\
(\
~red.ar(2);\
~green.ar(2);\
~blue.ar(2);\
~out = ~red + ~green + ~blue;\
)\
\
~src = \{ \cf4 WhiteNoise\cf3 .ar ! 2\};\
~src = \{ \cf4 Impulse\cf3 .ar(\cf4 MouseX\cf3 .kr(1.0, 22050.0, 1), 0, 10.0) ! 2 \};\
\
(\
~red = \{ \cf4 BPF\cf3 .ar(~src.ar, 80.0, 0.01, 20).dup \};\
~green = \{ \cf4 BPF\cf3 .ar(~src.ar, 2500.0, 0.01, 4).dup \};\
~blue = \{ \cf4 BPF\cf3 .ar(~src.ar, 12000.0, 0.01, 2).dup \};\
)\
\
\cf2 // control proxies\cf3 \
(\
~rcnt.kr(1);\
~gcnt.kr(1);\
~bcnt.kr(1);\
~gcnt = 0.2;\
~rcnt = \{ \cf4 MouseX\cf3 .kr(0.01, 2.0, 1) \};\
~bcnt = \{ \cf4 MouseY\cf3 .kr(0.01, 2.0, 1) \};\
~out = (~red * ~rcnt) + (~green * ~gcnt) + (~blue * ~bcnt);\
)\
\
\cf2 // color field\cf3 \
(\
\cf4 var\cf3  w, r = 0, g = 0, b = 0, run = \cf4 true\cf3 ;\
w = \cf4 SCWindow\cf3 (\cf5 "RGB"\cf3 , \cf4 Rect\cf3 (100, 100, 600, 600));\
w.view.background = \cf4 Color\cf3 .white;\
w.onClose = \{ run = \cf4 false\cf3 ; \};\
w.front;\
# r, g, b = [256.rand, 256.rand, 256.rand];\
w.drawHook = \{\
	\cf4 Pen\cf3 .use \{\
		r = (r+2.rand)%256; g = (g+2.rand)%256; b = (b+2.rand)%256;\
		\cf4 Color\cf3 .new255(r, g, b).set.postln;\
		\cf4 Pen\cf3 .fillRect(\cf4 Rect\cf3 (0, 0, 600, 600));\
	\};\
\};\
\{ while \{ run \} \{ w.refresh; 0.01.wait\} \}.fork(\cf4 AppClock\cf3 )\
)\
\
\cf2 // change filter bandwidths\cf3 \
(\
~red = \{ \cf4 BPF\cf3 .ar(~src.ar, 80.0, 0.1, 10).dup \};\
~green = \{ \cf4 BPF\cf3 .ar(~src.ar, 2500.0, 0.1, 2).dup \};\
~blue = \{ \cf4 BPF\cf3 .ar(~src.ar, 12000.0, 0.1, 1).dup \};\
)\
\
\
\
\cf2 // random complementary colors\cf3 \
(\
\cf4 var\cf3  w, r, h, c, run = \cf4 true\cf3 ;\
w = \cf4 SCWindow\cf3 (\cf5 "complementary color"\cf3 , \cf4 Rect\cf3 (100, 100, 600, 600));\
w.view.background = \cf4 Color\cf3 .white;\
w.onClose = \{ run = \cf4 false\cf3 ; \};\
w.front;\
w.drawHook = \{\
	\cf4 Pen\cf3 .use \{\
		h = 0.5.rand;\
		\cf4 Color\cf3 .hsv(h, 1.0, 1.0).set;\
		\cf4 Pen\cf3 .fillRect(\cf4 Rect\cf3 (0, 0, 600, 300));\
		\cf4 Color\cf3 .hsv(h+0.5, 1.0, 1.0).set;\
		\cf4 Pen\cf3 .fillRect(\cf4 Rect\cf3 (0, 300, 600, 600));\
	\};\
\};\
\{ while \{ run \} \{ w.refresh; 0.5.wait \} \}.fork(\cf4 AppClock\cf3 )\
)\
\
\cf2 // complementary sounds\cf3 \
(\
~src = \{ \cf4 WhiteNoise\cf3 .ar ! 2\};\
~freqX = \{ \cf4 MouseX\cf3 .kr(20.0, 22050.0, 1) \};\
~freqY = \{ \cf4 MouseY\cf3 .kr(20.0, 22050.0, 1) \};\
)\
\
~out = \{ \cf4 BPF\cf3 .ar(~src.ar, ~freqX.kr, 0.01, 5) \};\
~out = \{ \cf4 BRF\cf3 .ar(~src.ar, ~freqY.kr, 1.0, 0.1) \};\
(\
~out = \{ \cf4 BRF\cf3 .ar(\
				\cf4 BPF\cf3 .ar(~src.ar, ~freqX.kr, 0.01, 5),\
				~freqY.kr, 1.0, 5.0) \};\
)\
\
\cf2 //\cf3 \
\cf2 // color-timbre analogies\cf3 \
\cf2 //\cf3 \
\cf2 // brightness = amplitude\cf3 \
\cf2 // hue = pitch\cf3 \
\cf2 // saturation = bandwidth\cf3 \
\cf2 //\cf3 \
\
(\
\cf4 var\cf3  w, r, h, s, v, run = \cf4 true\cf3 ;\
w = \cf4 SCWindow\cf3 (\cf5 "RGB"\cf3 , \cf4 Rect\cf3 (100, 100, 600, 600));\
w.view.background = \cf4 Color\cf3 .white;\
w.onClose = \{ run = \cf4 false\cf3 ; \};\
w.front;\
h = 1.0.rand;\
s = 256;\
v = 1.0.rand;\
w.drawHook = \{\
	s = (s - 1) % 256;\
	if (s==0) \{h = 1.0.rand; v = 1.0.rand\};\
	\cf4 Pen\cf3 .use \{\
		\cf4 Color\cf3 .hsv(h, s/256.0, v).set;\
		\cf4 Pen\cf3 .fillRect(\cf4 Rect\cf3 (0, 0, 600, 600));\
	\};\
\};\
\{ while \{ run \} \{ w.refresh; 0.01.wait \} \}.fork(\cf4 AppClock\cf3 )\
)\
\
\
\cf2 // controling bandwidth\cf3 \
\
~src = \{ \cf4 WhiteNoise\cf3 .ar ! 2\};\
~freq = \{ \cf4 MouseX\cf3 .kr(20.0, 22050.0, 1) \};\
~rq = \{ \cf4 MouseY\cf3 .kr(0.001, 10.0, 1) \};\
~out = \{ \cf4 Normalizer\cf3 .ar(\cf4 BPF\cf3 .ar(~src.ar, ~freq.kr, ~rq.kr, 0.5), 0.5, 0.01) \};\
\
~out = \{ \cf4 SinOsc\cf3 .ar(~freq.kr, 0, 0.5) ! 2 \};\
~out = \{ \cf4 WhiteNoise\cf3 .ar(0.5) ! 2 \};\
\
\
\
\
\
\
}